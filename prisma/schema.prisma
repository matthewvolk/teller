generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model PlaidItem {
  id          String @id @default(cuid())
  userId      String
  accessToken String
  itemId      String @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Necessary for next-auth
model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? // @db.Text in Postgres
  refresh_token_expires_in Int?
  access_token             String? // @db.Text in Postgres
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? // @db.Text in Postgres
  session_state            String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  accounts  Account[]
  sessions  Session[]
  PlaidItem PlaidItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
